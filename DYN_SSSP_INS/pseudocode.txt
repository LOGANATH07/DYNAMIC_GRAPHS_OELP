running the script

.\SSSP_Snap.exe <graph_file> <no.of vertices> <no.of edges> <new edge insertion_file> <no.of new edges>

Functions Used:

SSSP:
INPUT  -> graph in CSR format 
OUTPUT -> an array of shortest path from 0(source)

SSSPNEW:
INPUT  -> new vertice along with SSSP output array
OUTPUT -> updates the SSSP array based on new edges

DYNSSSP:
INPUT  -> new edge along with SSSP output array
OUTPUT -> calls SSSPNEW for updating shortest path

Pseudocode:

1. Store the input from graph_file in an edge vector(called node).
2. Call SSSP to create the array of shortest path.
3. Store the new edges in another edge vector(called addedge).
4. For each edge in addedge call DYNSSSP.
5. Let the new edge be (i,j) from i to j 
    if (arr[i] + edgeweight(i,j) < arr[j]) then the new edge
    is the shortest path to j.
    updates the arr[j] with the new value and call SSSPNEW on j
6. The SSSPNEW takes a vertex as input(here j) and checks if the new value of j
    affects the shortest path between j and its neighbours , if so update the arr
    with the new shortest path and call SSSPNEW on the neighbour.
    The process goes on until the if condition fails or the graph reaches the end(or leaves)
7. Repeat this process for all the edges in addedge vector.